<?xml version="1.0"?>

<!--
  Copyright (c) 2016, 2018 IBM Corp. and others

  This program and the accompanying materials are made available under
  the terms of the Eclipse Public License 2.0 which accompanies this
  distribution and is available at https://www.eclipse.org/legal/epl-2.0/
  or the Apache License, Version 2.0 which accompanies this distribution and
  is available at https://www.apache.org/licenses/LICENSE-2.0.

  This Source Code may also be made available under the following
  Secondary Licenses when the conditions for such availability set
  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
  General Public License, version 2 with the GNU Classpath
  Exception [1] and GNU General Public License, version 2 with the
  OpenJDK Assembly Exception [2].

  [1] https://www.gnu.org/software/classpath/license.html
  [2] http://openjdk.java.net/legal/assembly-exception.html

  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
-->

<project name="Test Example" default="build" basedir=".">
	<taskdef resource='net/sf/antcontrib/antlib.xml'/>
	<description>
		Test Example
	</description>
	<import file="${TEST_ROOT}/functional/build.xml"/>

	<!-- set global properties for this build -->
	<property name="DEST" value="${BUILD_ROOT}/functional/Java9andUp" />
		
	<!--Properties for this particular build-->
	<property name="src" location="./src"/>
	<property name="src_current" location="./src_current"/>
	<property name="src_latest" location="./src_latest"/>
	<property name="TestUtilities" location="../TestUtilities/src"/>
	<property name="module_bin" location="./module_bin"/>
	<property name="dest_module_bin" location="${DEST}/module_bin"/>
	<property name="build" location="./bin"/>
	<property name="transformerListener" location="${TEST_ROOT}/Utils/src"/>

	<!--<property name="src.level" value="1.9"/>
	<property name="target.level" value="1.9"/> -->

	<target name="init">
		<mkdir dir="${DEST}" />
		<mkdir dir="${build}"/>
	</target>
	
	<target name="compile" depends="init" description="Using ${JAVA_VERSION} java compile the source " >
		<echo>Ant version is ${ant.version}</echo>
		<echo>============COMPILER SETTINGS============</echo>
		<echo>===fork:				yes</echo>
		<echo>===executable:			${compiler.javac}</echo>
		<echo>===debug:				on</echo>
		<echo>===destdir:				${DEST}</echo>

		<if>
			<equals arg1="${JCL_VERSION}" arg2="current"/>
			<then>
				<javac srcdir="${src}" destdir="${build}" debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" encoding="ISO-8859-1">
					<src path="${src}"/>
					<src path="${src_current}"/>
					<src path="${TestUtilities}" />
					<src path="${transformerListener}" />
					<compilerarg line="--add-exports java.base/jdk.internal.misc=ALL-UNNAMED --add-exports java.base/sun.security.internal.spec=ALL-UNNAMED --add-exports java.base/jdk.internal.reflect=ALL-UNNAMED --add-exports java.base/com.ibm.tools.attach.target=ALL-UNNAMED" />
					<classpath>
						<pathelement location="${TEST_ROOT}/TestConfig/lib/asm-all.jar" />
						<pathelement location="${TEST_ROOT}/TestConfig/lib/testng.jar"/>
						<pathelement location="${TEST_ROOT}/TestConfig/lib/jcommander.jar"/>
					</classpath>
				</javac>
			</then>
			<else>
				<javac srcdir="${src}" destdir="${build}" debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" encoding="ISO-8859-1">
					<src path="${src}"/>
					<src path="${src_latest}"/>
					<src path="${TestUtilities}" />
					<src path="${transformerListener}" />
					<compilerarg line="--add-exports java.base/jdk.internal.misc=ALL-UNNAMED --add-exports java.base/sun.security.internal.spec=ALL-UNNAMED --add-exports java.base/jdk.internal.reflect=ALL-UNNAMED --add-exports java.base/com.ibm.tools.attach.target=ALL-UNNAMED" />
					<classpath>
						<pathelement location="${TEST_ROOT}/TestConfig/lib/asm-all.jar" />
						<pathelement location="${TEST_ROOT}/TestConfig/lib/testng.jar"/>
						<pathelement location="${TEST_ROOT}/TestConfig/lib/jcommander.jar"/>
					</classpath>
				</javac>
			</else>
		</if>
	</target>

	<target name="build_moduletest" depends="init" description="Create the modules for the modularity tests " >
		<if> <!-- These tests are not supported for build 148 -->
			<equals arg1="${JCL_VERSION}" arg2="latest"/>
			<then>
			<mkdir dir="${dest_module_bin}"/>
			<copy todir="${module_bin}">
				<fileset dir="${src}/../modules"  includes="*org.*/*"/>
			</copy>
			<property name="MODULE_NAME_ROOT" value="org.openj9test.modularity"/>
			<property name="MODULE_PATH_ROOT" value="org/openj9/test/modularity"/>
			<for list="A,B,C,D" param="mod">
			  <sequential>
				<copy todir="${module_bin}/${MODULE_NAME_ROOT}.module@{mod}">
					<fileset dir="${build}"  includes="org/openj9/test/modularity/pkg@{mod}*/*"/>
				</copy>
			  </sequential>
			</for>		
			<copy todir="${module_bin}/${MODULE_NAME_ROOT}.common">
				<fileset dir="${build}"  includes="${MODULE_PATH_ROOT}/common/*"/>
			</copy>
			<copy todir="${module_bin}/${MODULE_NAME_ROOT}.testerModule">
				<fileset dir="${build}"  includes="${MODULE_PATH_ROOT}/tests/*"/>
			</copy>
	
			<for list="common,moduleD,moduleC,moduleB,moduleA,testerModule" param="mod">
			  <sequential>
				<javac srcdir="${module_bin}/${MODULE_NAME_ROOT}.@{mod}" 
					destdir="${module_bin}/${MODULE_NAME_ROOT}.@{mod}" 
					debug="true" fork="true" executable="${compiler.javac}" 
					includeAntRuntime="false" encoding="ISO-8859-1">
					<compilerarg line="-p ${module_bin}:${TEST_ROOT}/TestConfig/lib/testng.jar"/>
				</javac>
			  </sequential>
			</for>	
			<exec executable="${JAVA_BIN}/java" failonerror="true">
				<arg line="-jar ${TEST_ROOT}/TestConfig/lib/asmtools.jar jasm -d ${module_bin}/${MODULE_NAME_ROOT}.testerModule ${src_latest}/${MODULE_PATH_ROOT}/tests/MethodHandleTester.jasm"/>
			</exec>
			</then>
		</if>
	</target>

	<target name="dist" depends="compile,build_moduletest,dist_functional" description="generate the distribution" >
		<mkdir dir="${DEST}"/>
		<jar jarfile="${DEST}/GeneralTest.jar" filesonly="true">
			<fileset dir="${build}"/>
			<fileset dir="${src}/../" includes="*.properties,*.xml"/>
		</jar>
		<copy todir="${DEST}">
			<fileset dir="${src}/../" includes="*.xml" />
			<fileset dir="${src}/../" includes="*.mk" />
		</copy>
		<if> <!-- These tests are not supported for build 148 -->
			<equals arg1="${JCL_VERSION}" arg2="latest"/>
			<then>
				<echo>copy ${module_bin} to ${dest_module_bin}</echo>
				<mkdir dir="${dest_module_bin}"/>
				<copy todir="${dest_module_bin}">
					<fileset dir="${module_bin}"/>
				</copy>
			</then>
		</if>
	</target>
	
	<target name="build" >
		<if>
			<not>
				<equals arg1="${JAVA_VERSION}" arg2="SE80"/>
			</not>
			<then>
				<antcall target="clean" inheritall="true" />
			</then>
		</if>
	</target>

	<target name="clean" depends="dist" description="clean up" >
		<!-- Delete the ${build} directory trees -->
		<delete dir="${module_bin}"/>
		<delete dir="${build}"/>
	</target>
</project>
